{
	"info": {
		"_postman_id": "e42fcb43-6bd9-4b77-b6ca-c04ad35526f3",
		"name": "Album",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17548698"
	},
	"item": [
		{
			"name": "All Albums",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of albums > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/albums",
					"host": [
						"{{URL}}"
					],
					"path": [
						"albums"
					]
				}
			},
			"response": []
		},
		{
			"name": "One correct album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/albums/{{ALBUM_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"albums",
						"{{ALBUM_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "One wrong album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The album with the given id was not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/albums/11068bd7-0000-0000-0000-5a45d0bcb051",
					"host": [
						"{{URL}}"
					],
					"path": [
						"albums",
						"11068bd7-0000-0000-0000-5a45d0bcb051"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create album",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var current_timestamp = new Date();\r",
							"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"ALBUM_ID\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test album\",\r\n    \"releaseDate\": \"2023-10-25\",\r\n    \"cover\": \"https://picsum.photos/200\",\r\n    \"description\": \"Test Album Description\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/albums",
					"host": [
						"{{URL}}"
					],
					"path": [
						"albums"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create album without name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var current_timestamp = new Date();\r",
							"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The album name is required.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \" \",\r\n    \"releaseDate\": \"2023-10-25\",\r\n    \"cover\": \"https://picsum.photos/200\",\r\n    \"description\": \"Test Album Description\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/albums",
					"host": [
						"{{URL}}"
					],
					"path": [
						"albums"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create album without desc",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var current_timestamp = new Date();\r",
							"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The album description is required.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test Album\",\r\n    \"releaseDate\": \"2023-10-25\",\r\n    \"cover\": \"https://picsum.photos/200\",\r\n    \"description\": \" \"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/albums",
					"host": [
						"{{URL}}"
					],
					"path": [
						"albums"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete correct album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/albums/{{ALBUM_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"albums",
						"{{ALBUM_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete wrong album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The album with the given id was not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/albums/{{ALBUM_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"albums",
						"{{ALBUM_ID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}